Changed BoardMaker functionality:
- Done button now outputs all bitboards, the flagged indicies of the bitboard longs, and the returnPieceboards
- Done clears the current list of bitboards and boards, continues execution
- Changed generateCheckEvasionMoves() in the way it prevents self-checking moves from being suggested
- Added generateEnPassentMask(int playerSign, int origin) to return a 1 bit en passent mask for a pawn at origin
    - Uses W_PAWN_ATTACK and B_PAWN_ATTACK and checks occupancy and move history

- Added setMoveQueue() to board for testing
- Added generatePawnAttackMask(int playerSign, int origin)
    - Uses W/B_PAWN_ATTACK and generateEnPassantMask in conjunction with board occupancy to provide valid pawn attack masks
- Modified generatePieceAttackMask()
    - Replaced pawn move generation with generatePawnAttack()
    - Modified Illegal move checker at the end of the function to also test for en passent moves

- Added test.generateCheckEvasionTest() to test many board positions with varying states, exitCode
- Added test.generateEnPassentMaskTest() to test en passent generation

Valid move generation:
- Should create a method to handle filtering of self-checking moves.
- Created and tested generateValidMoves() on starting positions
    - Add castling move generation
        - Add board utility to detect if a piece has moved

Castling rights: 
- Store as boolean for white and black
- If "true" check for possible castling rights for king moves, else skip checking
- During Move object Playing, Check if its a castling move, if so then toggle players' castling boolean so no more checks occur
- Also toggle if either KING moves at all, or BOTH rooks have moved.

Modified generateValidCastlingMoves() to also check for the occupancy of the square directly right of the long castle rook,
since that square must be unoccupied. The square however does not have to be free of enemy vision, which is why I don't add
directly to W/B_CASTLE_LONG mask